{% extends 'base.html.twig' %}

{% block title %}Material{% endblock %}

{% block content %}

{% if app.user %}
<div>  
    <p>
        <label for="startDate">Start Date:</label>
        <input id="startDate" type="date" required>
    </p>
    <p>
        <label for="endDate">End Date:</label>
        <input id="endDate" type="date" required>
    </p>
</div>
<table>
    <thead>
        <tr>
            <th>Material</th>
            <th>Status</th>
            <th>Menge</th>
            <th>Verliehen von</th>
            <th>Verliehen bis</th>
            <th>Ausleihen</th>
        </tr>
    </thead>
    <tbody>
        {% set today = "now"|date("Y-m-d") %}
        
        {% set start_date_input = app.request.get('startDate') or today %}
        {% set end_date_input = app.request.get('endDate') or today %}

        {% set sorted_items = items|sort((a, b) => a.name <=> b.name) %}

        {% for item in sorted_items %}
            {% set is_available = true %}

            {% for loan in item.getLoans() %}
                {% if loan.getStartDate() is not null and loan.getEndDate() is not null %}
                    {% set loan_start = loan.getStartDate()|date("Y-m-d") %}
                    {% set loan_end = loan.getEndDate()|date("Y-m-d") %}

                    {% if loan_start <= end_date_input and loan_end >= start_date_input %}
                        {% set is_available = false %}
                    {% endif %}
                {% endif %}
            {% endfor %}

            <tr {% if not is_available %}class="disabled"{% endif %}>
                <td>{{ item.name }}</td>
                <td>
                    {% if is_available %}
                        Verf√ºgbar
                    {% else %}
                        Verliehen
                    {% endif %}
                </td>
                <td>
                    {% if item.description %}
                        {{ item.description }}
                    {% else %}
                        Keine Beschreibung
                    {% endif %}
                </td>
                <td>
                    {% if item.getLoans() is not empty %}
                        {{ item.getLoans()[0].getStartDate()|date("Y-m-d H:i:s") }}
                    {% else %}
                        -
                    {% endif %}
                </td>
                <td>
                    {% if item.getLoans() is not empty %}
                        {{ item.getLoans()[0].getEndDate()|date("Y-m-d H:i:s") }}
                    {% else %}
                        -
                    {% endif %}
                </td>
                <td>
                    <input type="checkbox" class="loan-checkbox" data-item-id="{{ item.id }}" {% if not is_available %}disabled{% endif %}>
                </td>
            </tr>
        {% endfor %}
    </tbody>
</table>


<button id="submit-loan">Submit</button>

<h2>Request</h2>
<p id="request"></p>

<h2>Response</h2>
<p id="response"></p>

<script>

    async function deleteLoans(loanIds) {
        try {
            const response = await fetch('/api/loan/delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(loanIds),
            });
            
            const result = await response.json();
            console.log('Deletion Result:', result);
        } catch (e) {
            console.error('Error deleting loans:', e);
        }
    }
    
    // Call the function to get and delete loans for testItem3 (replace with actual ID)
    deleteLoans("0195f540-334b-726f-a5c2-4c455648b387");

    const submitButton = document.getElementById('submit-loan');
    submitButton.addEventListener("click", async (event) => {
        // Get the selected items (from the checked checkboxes)
        const selectedItems = [];
        document.querySelectorAll('.loan-checkbox:checked').forEach((checkbox) => {
            selectedItems.push(checkbox.getAttribute('data-item-id'));
        });

        if (selectedItems.length === 0) {
            alert('Please select at least one item.');
            return;
        }

        // Get the start and end date values
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
   
        // Ensure that both dates are provided
        if (!startDate || !endDate) {
            alert('Please fill in both start and end dates.');
            return;
        }

        // Convert the start and end dates to timestamps
       // const startTimestamp = new Date(startDate).getTime(); // Converts to timestamp in milliseconds
       // const endTimestamp = new Date(endDate).getTime(); // Converts to timestamp in milliseconds

        // Prepare the request body with timestamps
        const requestBody = JSON.stringify([{
            "startDate": startDate,
            "endDate": endDate,
            "items": selectedItems
        }]);

        // Send the data
        await sendData(requestBody);
    });

    async function sendData(requestBody) {
        console.log("Request Body:", requestBody);
        document.getElementById('request').innerHTML = requestBody;

        try {
            const response = await fetch("/api/loan/create", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: requestBody
            });

            const serverResponse = await response.json();
            console.log("Response", serverResponse);
            document.getElementById('response').innerHTML = JSON.stringify(serverResponse);
        } catch (e) {
            console.error(e);
            document.getElementById('response').innerHTML = JSON.stringify(e);
        }
    }
</script>

{% else %}
    not logged in
{% endif %}

<!-- Inline styles for the table and disabled rows -->
<style>
    .disabled {
        color: rgb(118, 115, 115);
    }

    .disabled input[type="checkbox"] {
        pointer-events: none;
        opacity: 0.6;
    }
</style>

{% endblock %}
